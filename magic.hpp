#include <climits>
#include <cstddef>
#include <cstdint>
#include <utility>

namespace magic
{

consteval std::size_t igr() noexcept
{ // inverse golden ratio
  std::uint8_t const A[]{
    0x9E, 0x37, 0x79, 0xB9, 0x7F, 0x4A, 0x7C, 0x15,
    0xF3, 0x9C, 0xC0, 0x60, 0x5C, 0xED, 0xC8, 0x34,
    0x10, 0x82, 0x27, 0x6B, 0xF3, 0xA2, 0x72, 0x51,
    0xF8, 0x6C, 0x6A, 0x11, 0xD0, 0xC1, 0x8E, 0x95,
    0x27, 0x67, 0xF0, 0xB1, 0x53, 0xD2, 0x7B, 0x7F,
    0x03, 0x47, 0x04, 0x5B, 0x5B, 0xF1, 0x82, 0x7F,
    0x01, 0x88, 0x6F, 0x09, 0x28, 0x40, 0x30, 0x02,
    0xC1, 0xD6, 0x4B, 0xA4, 0x0F, 0x33, 0x5E, 0x36
  };

  return [&]<auto ...I>(std::index_sequence<I...>) noexcept
    {
      return (
        (std::size_t(A[I]) << (sizeof(std::size_t) - 1 - I) * CHAR_BIT) | ...
      );
    }(std::make_index_sequence<sizeof(std::size_t)>()) | std::size_t(1);
}

}
